[X]	Download and install GIT Bash of https://git-scm.com/ to be alte to obtain
	the HLAE source code and also other source code during the build process.

[X] Install Node.js 22 LTS from https://nodejs.org/en/download/prebuilt-installer
    we used v22.11.0 (LTS).

[X] Download and install Microsoft Visual Studio Community 2022, which you can
    obtain for free from https://www.visualstudio.com/downloads/ .
    - Select Workloads - Desktop & Mobile - .NET Desktop Development
    - Select Workloads - Desktop & Mobile - Desktop development with C++
	- Select Individual Components - .NET Framework 4.6.2 targeting pack
    - You'll need to install Wix Toolset Visual Studio 2022 Extension from
      within Visual Studio afterwards.

[X]	Obtain Python 3 from https://www.python.org/downloads/windows/ .
	We used python-3.12.1-amd64, but any 3.8 or newer 3 should do.
	You will need to do the custom installation
	with pip and py launcher.
	
[X]	Obtain GNU gettext Windows binaries from https://www.gnu.org/software/gettext/ .
	We used gettext0.20.1-iconv1.16-shared-64.exe .
	
[X] Install WiX Toolset from https://github.com/wixtoolset/wix3/releases
	We used WiX Toolset v3.14.1 (wix314.exe).

[X]	Obtain and install Rust and Cargo:
	https://doc.rust-lang.org/cargo/getting-started/installation.html
	Then execute the following line in command prompt of the user you will compile HLAE with:
	rustup target add --toolchain stable-x86_64-pc-windows-msvc i686-pc-windows-msvc

[X] Obtain the HLAE source code from https://github.com/advancedfx/advancedfx into a
    folder you like, we'll call it <HLAESRC> from now on (by that I mean
    extract it so that you end up with the files like advancedfx.sln and directories
    in C:\<HLAESRC>\advancedfx folder).
    We recommend using the GIT Bash to obtain the source code, so you can
    easily fetch and merge updates from the advancedfx repository:
    cd /c/<HLAESRC>
    git clone --recurse-submodules https://github.com/advancedfx/advancedfx.git

[X] Open Visual Studio 2022 Developer Command Prompt:
	cd C:\<HLAESRC>\advancedfx\
	mkdir build
	cd build
	mkdir Release
	cd Release
	cmake -DCMAKE_BUILD_TYPE=Release -G "Visual Studio 17 2022" -T "v143" -A "Win32" ../..
	cmake --build . --config Release -v -- -r
	cmake --install . --config Release -v
	
	(For Debug builds replace Release with Debug in the instructions above.)

[X] After that the installer and the zip can be found in "C:\<HLAESRC>\advancedfx\build\Release".

[X] Things you should do before releasing a new version:
  - Update version in hlae/CMakeLists.txt
  - Update GUIDs in hlae/UpdateCheck.cs
  - If releasing installer, all these need to be updated, because otherwise users can end up with hash collisions if you
    don't manage to provide the exact same package binary again for same version number:
    - Increase package version (e.g. 2nd field (minor), at least 3rd field) in installer/HlaeCore/Package.wxs
    - Increase package version (at least 3rd field) in installer/HlaeFfmpeg/Package.wxs
    - Increase bundle version (e.g. 2nd field (minor), at least 3rd field) in installer/setup/Bundle.wxs
  - In AfxHookSource2Rs run to see if THIRDPARTY.yml needs updating:
    cargo install cargo-bundle-licenses && cargo bundle-licenses --format yaml --output CI.yaml --previous THIRDPARTY.yml --check-previous && echo DONE: Okay.